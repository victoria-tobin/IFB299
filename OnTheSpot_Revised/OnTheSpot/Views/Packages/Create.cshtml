@model OnTheSpot.Models.Package

@{
    ViewBag.Title = "Create";
}


@*Form to allow creation of a new package*@


<div class="bodytext">

    <h1>Add a New Package</h1>
    <h2>Be careful to input valid information!</h2>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Package</legend>

            @Html.HiddenFor(model => model.Collected)
            @Html.HiddenFor(model => model.Delivered)
            @Html.HiddenFor(model => model.Status)

                    <div class="editor-label">
                @Html.LabelFor(model => model.OrderID, "OrderID")
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.OrderID, (SelectList)ViewBag.OrderID)
                @Html.ValidationMessageFor(model => model.OrderID)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.AssignedCourier, "AssignedCourier")
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.AssignedCourier, (SelectList)ViewBag.Cour, string.Empty)
                @Html.ValidationMessageFor(model => model.AssignedCourier)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Priority, "Priority")
            </div>
            <div class="editor-field">
                @Html.RadioButtonFor(model => model.Priority, "Standard") Standard
            </div>
            <div class="editor-field">
                @Html.RadioButtonFor(model => model.Priority, "High") High
            </div>
            <div class="editor-field">
                @Html.RadioButtonFor(model => model.Priority, "Overnight") Overnight
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Weight)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Weight)
                @Html.ValidationMessageFor(model => model.Weight)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Weight)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Height)
                @Html.ValidationMessageFor(model => model.Height)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Weight)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Width)
                @Html.ValidationMessageFor(model => model.Width)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Weight)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Length)
                @Html.ValidationMessageFor(model => model.Length)
            </div>
            <p>
                <input type="submit" value="Create" />
            </p>
        
        </fieldset>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
