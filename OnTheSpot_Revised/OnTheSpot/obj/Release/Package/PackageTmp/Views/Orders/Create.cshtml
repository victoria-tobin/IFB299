@model OnTheSpot.Models.Order

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    if (ViewBag.showError == true) { 
    <p> 
        @Html.ValidationMessage("error")
       
    </p>
}

@Html.HiddenFor(model=>model.OrderSubmitted)
    @Html.HiddenFor(model=>model.Completed)
    @Html.HiddenFor(model=>model.OrderID)

    if(User.IsInRole("Customer"))
    {
        @Html.HiddenFor(model=>model.Username)
    }
    
    if (User.IsInRole("Admin"))
    {
        @Html.HiddenFor(model=>model.Packages)
    }

    <fieldset>
        <legend>Order</legend>

        @if(User.IsInRole("Admin")) {
        <div class="editor-label">
            @Html.LabelFor(model => model.Username)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Username)
            @Html.ValidationMessageFor(model => model.Username)
        </div>
        }
       
        <div class="editor-label">
            @Html.LabelFor(model => model.Pickup)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Pickup)
        </div>

        @if(User.IsInRole("Customer"))
        {
            @Html.EditorFor(model => model.Packages)
        }
        

        <p>
            <input type="submit" value="Create" />
        </p>

    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
