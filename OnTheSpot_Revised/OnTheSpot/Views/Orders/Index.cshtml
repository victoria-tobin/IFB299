@model IEnumerable<OnTheSpot.Models.Order>

@{
    ViewBag.Title = "Index";
}

<div class="bodytext">

    <h1>All Current Orders</h1>

    <div>
        <ul id ="m">
       
         @if (User.IsInRole("Admin")) {
        <li>@Html.ActionLink("All Orders", "Index", "Orders")</li>
        <li>@Html.ActionLink("Outstanding Orders", "Index", "Orders", new { outstanding = true }, null)</li>
        <li>@Html.ActionLink("Packages", "Index", "Packages")</li>
        } else {
        <li>@Html.ActionLink("Orders", "Index", "Orders")</li>
        <li>@Html.ActionLink("Packages", "Index", "Packages")</li>
        }
        @if (User.IsInRole("Admin") || User.IsInRole("Customer"))
        {
            <li>@Html.ActionLink("New Order", "Create")</li>
        }
        
        </ul>
    </div>

    @using (Html.BeginForm())
    {
        <p>
            Order ID: @Html.TextBox("searchInt")
            <input type="submit" value="Search" />
        </p>
    }


    <table>
        <tr>
            <th>
                @Html.ActionLink("Order Id", "Index", 
                new { sortOrder = ViewBag.OrderIdSortParm, outstanding = ViewBag.IsOut, searchInt = ViewBag.Search })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Pickup)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PickupAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeliveryAddress)
            </th>
            <th>
                @Html.ActionLink("Order Submitted", "Index", 
                new { sortOrder = ViewBag.DateSortParm, outstanding = ViewBag.IsOut, searchInt = ViewBag.Search })

            </th>
            @if(User.IsInRole("Admin" )|| User.IsInRole( "Courier")) {
            <th>
                @Html.DisplayNameFor(model => model.Completed)
            </th>
        
            <th></th>
            }
        </tr>
    
    
            @foreach (var item in Model) {
            
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Username)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Pickup)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PickupAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeliveryAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderSubmitted)
                    </td>

                    @if(User.IsInRole("Admin" )|| User.IsInRole( "Courier")) {
                    <td>
                        @Html.DisplayFor(modelItem => item.Completed)
                    </td>
                    if (User.IsInRole("Admin")) {
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.OrderID }) |
                        @Html.ActionLink("Details", "Details", new { id=item.OrderID }) |
                        @Html.ActionLink("Delete", "Delete", new { id=item.OrderID })
                    </td>
                    }
                    }
                </tr>
        }
 

    </table>
</div>
