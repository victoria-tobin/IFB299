@model OnTheSpot.Models.Order

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Order</legend>

        @Html.HiddenFor(model => model.OrderID)
        @Html.HiddenFor(model => model.UserId)

        <div class="editor-label">
            @Html.LabelFor(model => model.Username)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Username)
            @Html.ValidationMessageFor(model => model.Username)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PickupAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PickupAddress)
            @Html.ValidationMessageFor(model => model.PickupAddress)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.DeliveryAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DeliveryAddress)
            @Html.ValidationMessageFor(model => model.DeliveryAddress)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Pickup)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Pickup)
        </div>

        @if (User.IsInRole("Admin") || User.IsInRole("Courier"))
        {
            <div class="editor-label">
                @Html.LabelFor(model => model.Completed)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Completed)
                @Html.ValidationMessageFor(model => model.Completed)
            </div>
        }
        


        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
