@model OnTheSpot.Models.Package

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Package</legend>

        @Html.HiddenFor(model => model.PackageID)
        @Html.HiddenFor(model => model.OrderID)

        @if (User.IsInRole("Courier"))
        {
            @Html.HiddenFor(model => model.AssignedCourier)
            @Html.HiddenFor(model => model.Priority)
            @Html.HiddenFor(model => model.Weight)
        }

        @if (User.IsInRole("Admin")) {
        <div class="editor-label">
            @Html.LabelFor(model => model.AssignedCourier, "AssignedCourier")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.AssignedCourier, (SelectList)ViewBag.Cour, string.Empty)
            @Html.ValidationMessageFor(model => model.AssignedCourier)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Priority, "Priority")
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.Priority, "Standard") Standard
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.Priority, "High") High
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.Priority, "Overnight") Overnight
        </div>
        }


        <div class="editor-label">
            @Html.LabelFor(model => model.Status, "Status")
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.Status, "ReadyForPickup") ReadyForPickup 
        </div>
        <div class="editor-field"> 
            @Html.RadioButtonFor(model => model.Status, "AtWarehouse") AtWarehouse
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.Status, "InTransit") InTransit
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.Status, "Delivered") Delivered
        </div>

        @if (User.IsInRole("Admin")) {

        <div class="editor-label">
            @Html.LabelFor(model => model.Weight, "Weight")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Weight)
            @Html.ValidationMessageFor(model => model.Weight)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Length, "Length")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Length)
            @Html.ValidationMessageFor(model => model.Length)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Weight, "Width")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Width)
            @Html.ValidationMessageFor(model => model.Width)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Weight, "Height")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Height)
            @Html.ValidationMessageFor(model => model.Height)
        </div>
        }


        <div class="editor-label">
            @Html.LabelFor(model => model.Collected, "Collected")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Collected)
            @Html.ValidationMessageFor(model => model.Collected)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Delivered, "Delivered")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Delivered)
            @Html.ValidationMessageFor(model => model.Delivered)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
