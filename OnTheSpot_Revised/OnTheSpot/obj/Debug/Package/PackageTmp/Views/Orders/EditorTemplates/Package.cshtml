@model OnTheSpot.Models.Package 

<script src="~/Scripts/jquery-1.8.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


    @Html.ValidationSummary(true)

    @if (User.IsInRole("Customer")) {
    @Html.HiddenFor(model => model.AssignedCourier)
    }
    @Html.HiddenFor(model => model.OrderID)
    @Html.HiddenFor(model => model.Status)
    @Html.HiddenFor(model => model.Collected)
    @Html.HiddenFor(model => model.Delivered)

    <fieldset>
        <legend>Package</legend>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Priority, "Priority")
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.Priority, "Standard") Standard
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.Priority, "High") High
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.Priority, "Overnight") Overnight
        </div>

        

        <div class="editor-label">
            @Html.LabelFor(model => model.Weight)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Weight)
            @Html.ValidationMessageFor(model => model.Weight)
        </div>

                <div class="editor-label">
            @Html.LabelFor(model => model.Height)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Height)
            @Html.ValidationMessageFor(model => model.Height)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Width)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Width)
            @Html.ValidationMessageFor(model => model.Width)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Length)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Length)
            @Html.ValidationMessageFor(model => model.Length)
        </div>

        @if(User.IsInRole("Admin")) {
        <div class="editor-label">
            @Html.LabelFor(model => model.AssignedCourier, "AssignedCourier")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.AssignedCourier, (SelectList)ViewBag.Cour, string.Empty)
            @Html.ValidationMessageFor(model => model.AssignedCourier)
        </div>
        }

    </fieldset>


